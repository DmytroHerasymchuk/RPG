<Window x:Class="RPG.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:RPG"
        xmlns:viewModels="clr-namespace:ViewModels;assembly=ViewModels"
        d:DataContext="{d:DesignInstance viewModels:GameSession}"
        mc:Ignorable="d"
        Title="{Binding GameDetails.Name}" Height="800" Width="1200"
        Style="{StaticResource CustomFont}" FontSize="24"
        WindowState="Maximized" WindowStyle="None"
        ResizeMode="NoResize"
        KeyDown="MainWindowOnKeyDown"
        Closing="MainWindowOnClosing">
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibility"/>
    </Window.Resources>


    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="225"/>
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1.3*"/>
            <ColumnDefinition Width="3*"/>
            <ColumnDefinition Width="1.3*"/>
        </Grid.ColumnDefinitions>
        <!--Menu-->
        
        <StackPanel Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3"
                    Orientation="Horizontal">
            <Button  Content="Menu" Width="192"
                Click="OnCliclOpenMainMenu" Height="30" >
                <Button.Background>
                    <ImageBrush ImageSource="MenuImages/Menu/ButtonBackground.jpg"
                            Stretch="Fill"/>
                </Button.Background>
            </Button>
            <Button  Content="Save" Width="192"
                 Click="OnClickSaveGame" Height="30" >
                <Button.Background>
                    <ImageBrush ImageSource="MenuImages/Menu/ButtonBackground.jpg"
                            Stretch="Fill"/>
                </Button.Background>
            </Button>
            <Button  Content="Inventory" Width="192"
                 Click="OnClickOpenInventory" Height="30" >
                <Button.Background>
                    <ImageBrush ImageSource="MenuImages/Menu/ButtonBackground.jpg"
                            Stretch="Fill"/>
                </Button.Background>
            </Button>
            <Button  Content="Quests" Width="192"
                 Click="OnClickOpenQuests" Height="30" >
                <Button.Background>
                    <ImageBrush ImageSource="MenuImages/Menu/ButtonBackground.jpg"
                            Stretch="Fill"/>
                </Button.Background>
            </Button>
            <Button  Content="Recipes" Width="192"
                 Click="OnClickOpenRecipes" Height="30" >
                <Button.Background>
                    <ImageBrush ImageSource="MenuImages/Menu/ButtonBackground.jpg"
                            Stretch="Fill"/>
                </Button.Background>
            </Button>
            <Button  Content="Player Info" Width="192"
                 Click="OnClickOpenPlayerDetails" Height="30" >
                <Button.Background>
                    <ImageBrush ImageSource="MenuImages/Menu/ButtonBackground.jpg"
                            Stretch="Fill"/>
                </Button.Background>
            </Button>
            <Button  Content="Map" Width="192"
                 Click="OnClickDisplayMap" Height="30" >
                <Button.Background>
                    <ImageBrush ImageSource="MenuImages/Menu/ButtonBackground.jpg"
                            Stretch="Fill"/>
                </Button.Background>
            </Button>
            <Button  Content="Game statistics" Width="192"
                 Click="OnClickOpenPlayerDetails" Height="30" >
                <Button.Background>
                    <ImageBrush ImageSource="MenuImages/Menu/ButtonBackground.jpg"
                            Stretch="Fill"/>
                </Button.Background>
            </Button>
        </StackPanel>

        <!--Canvas-->
        <Canvas Grid.Row="1" Grid.Column="0"
                Grid.RowSpan="2"
                Grid.ColumnSpan="2"
                x:Name="GameCanvas"
                ZIndex="99">
            <Canvas Canvas.Top="{Binding PlayerDetails.Top}" Canvas.Left="{Binding PlayerDetails.Left}"
                    Width="Auto"
                    Height="Auto"
                    x:Name="PlayerDetailsPopup"
                    MinHeight="{Binding PlayerDetails.MinHeight}"
                    MinWidth="{Binding PlayerDetails.MinWidth}"
                    MaxHeight="{Binding PlayerDetails.MaxHeight}"
                    MaxWidth="{Binding PlayerDetails.MaxWidth}"
                    Visibility="{Binding PlayerDetails.IsVisible, Converter={StaticResource BooleanToVisibility}}">
                <Border BorderBrush="Navy" BorderThickness="5" Background="DarkGoldenrod">
                    <Grid Margin="2">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="4"/>
                            <RowDefinition Height="60"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Label Grid.Row="0" Grid.Column="0"
                               HorizontalAlignment="Left"
                               FontWeight="Bold"
                               Content="Player Info"/>
                        <Button Grid.Row="0" Grid.Column="1"
                                Width="25"
                                FontWeight="Bold"
                                Content="X"
                                Click="OnClickClosePlayerDetails"
                                HorizontalAlignment="Right">
                            <Button.Resources>
                                <Style TargetType="Border">
                                    <Setter Property="CornerRadius" Value="3"/>
                                </Style>
                            </Button.Resources>

                        </Button>
                        <Border Grid.Row="2" Grid.Column="0"
                                Grid.ColumnSpan="2"
                                Grid.RowSpan="2"
                                Background="WhiteSmoke">
                        </Border>
                        <Canvas Grid.Row="2" Grid.Column="0"
                                Grid.ColumnSpan="2"
                                HorizontalAlignment="Left"
                                MaxHeight="{Binding RelativeSource={RelativeSource FindAncestor,
                                          AncestorType={x:Type Canvas}},Path=MaxHeight}"
                                Width="{Binding RelativeSource={RelativeSource FindAncestor,
                                          AncestorType={x:Type Canvas}},Path=ActualWidth}">
                            <Ellipse Canvas.Top="3" Canvas.Left="3"
                                     Width="50"
                                     Height="50"
                                     StrokeThickness="1"
                                     Stroke="SteelBlue"/>
                            <Ellipse Canvas.Top="5" Canvas.Left="5"
                                     Width="46"
                                     Height="46"
                                     StrokeThickness="1"
                                     Stroke="SteelBlue"/>
                            <Label Canvas.Top="7" Canvas.Left="5"
                                   Width="46"
                                   HorizontalContentAlignment="Center"
                                   VerticalContentAlignment="Center"
                                   FontSize="20pt"
                                   FontWeight="Bold"
                                   Content="{Binding CurrentPlayer.Level}"/>
                            <Label Canvas.Top="7" Canvas.Left="55"
                                   Width="200"
                                   FontSize="18pt"
                                   FontWeight="Bold"
                                   Content="{Binding CurrentPlayer.Name}"/>

                        </Canvas>
                        <Grid Grid.Row="3" Grid.Column="0"
                              HorizontalAlignment="Left"
                              VerticalAlignment="Top"
                              Margin="5">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Label Grid.Row="0" Grid.Column="0" FontWeight="Bold" Content="Class:" />
                            <Label Grid.Row="1" Grid.Column="0" FontWeight="Bold" Content="Health:" />
                            <Label Grid.Row="2" Grid.Column="0" FontWeight="Bold" Content="Experience:" />
                            <Label Grid.Row="3" Grid.Column="0" FontWeight="Bold" Content="Gold:" />
                            <Label Grid.Row="4" Grid.Column="0" FontWeight="Bold" Content="Attribute points: "/>
                            <Label Grid.Row="0" Grid.Column="1" FontWeight="Bold" Content="{Binding CurrentPlayer.CharacterClass.DisplayName}"/>
                            <Label Grid.Row="1" Grid.Column="1" FontWeight="Bold" Content="{Binding CurrentPlayer.HitPoint}" />
                            <Label Grid.Row="2" Grid.Column="1" FontWeight="Bold" Content="{Binding CurrentPlayer.ExperiencePoints}" />
                            <Label Grid.Row="3" Grid.Column="1" FontWeight="Bold" Content="{Binding CurrentPlayer.Gold}"/>
                            <Label Grid.Row="4" Grid.Column="1" FontWeight="Bold" Content="{Binding CurrentPlayer.AttributePoints}"/>
                        </Grid>
                        <ListBox Grid.Row="3" Grid.Column="1"  
                                 ItemsSource="{Binding CurrentPlayer.Attributes}">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition SharedSizeGroup="Description"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Text="{Binding DisplayName}"
                                           HorizontalAlignment="Left"
                                           MinWidth="150"
                                           MouseLeftButtonDown="OnMouseClickAddPoint"/>
                                        </Grid>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition SharedSizeGroup="Value"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Text="{Binding Value}"
                                           HorizontalAlignment="Right"/>
                                        </Grid>
                                    </StackPanel>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </Grid>
                </Border>
            </Canvas>
            <Canvas Canvas.Top="{Binding InventoryDetails.Top}" Canvas.Left="{Binding InventoryDetails.Left}"
                    Width="Auto"
                    Height="Auto"
                    x:Name="PlayerInventoryDetailsPopup"
                    MinHeight="{Binding InventoryDetails.MinHeight}"
                    MinWidth="{Binding InventoryDetails.MinWidth}"
                    MaxHeight="{Binding InventoryDetails.MaxHeight}"
                    MaxWidth="{Binding InventoryDetails.MaxWidth}"
                    Visibility="{Binding InventoryDetails.IsVisible, Converter={StaticResource BooleanToVisibility}}">
                <Border BorderBrush="Navy" BorderThickness="5" Background="DarkGoldenrod">
                    <Grid Margin="2">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="4"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Label Grid.Row="0" Grid.Column="0"
                               HorizontalAlignment="Left"
                               FontWeight="Bold"
                               Content="Inventory"/>
                        <Button Grid.Row="0" Grid.Column="1"
                                Width="25"
                                FontWeight="Bold"
                                Content="X"
                                Click="OnClickCloseInventory">
                            <Button.Resources>
                                <Style TargetType="Border">
                                    <Setter Property="CornerRadius" Value="3"/>
                                </Style>
                            </Button.Resources>

                        </Button>
                        <DataGrid Grid.Row="2" Grid.Column="0"
                                  Grid.ColumnSpan="2"
                                  ItemsSource="{Binding CurrentPlayer.Inventory.GroupedInventory}"
                                  HeadersVisibility="Column" AutoGenerateColumns="False"
                                  VerticalScrollBarVisibility="Auto"
                                  MaxHeight="{Binding RelativeSource={RelativeSource FindAncestor,
                                          AncestorType={x:Type Canvas}},Path=MaxHeight}"
                                  Width="{Binding RelativeSource={RelativeSource FindAncestor,
                                          AncestorType={x:Type Canvas}},Path=ActualWidth}">

                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Name"
                                                Binding="{Binding Item.Name, Mode=OneWay}"
                                                Width="2*"/>
                                <DataGridTextColumn Header="Rarity"
                                                Binding="{Binding Item.Rarity, Mode=OneWay}"
                                                Width="2*"/>
                                <DataGridTextColumn Header="Quantity"
                                                Binding="{Binding Quantity, Mode=OneWay}"
                                                Width="1.3*"/>
                                <DataGridTextColumn Header="Price"
                                                Binding="{Binding Item.Price, Mode=OneWay}"
                                                Width="*"/>

                            </DataGrid.Columns>
                        </DataGrid>
                    </Grid>
                </Border>
            </Canvas>
            <Canvas Canvas.Top="{Binding QuestsDetails.Top}" Canvas.Left="{Binding QuestsDetails.Left}"
                    Width="Auto"
                    Height="Auto"
                    x:Name="PlayerQuestsDetailsPopup"
                    MinHeight="{Binding QuestsDetails.MinHeight}"
                    MinWidth="{Binding QuestsDetails.MinWidth}"
                    MaxHeight="{Binding QuestsDetails.MaxHeight}"
                    MaxWidth="{Binding QuestsDetails.MaxWidth}"
                    Visibility="{Binding QuestsDetails.IsVisible, Converter={StaticResource BooleanToVisibility}}">
                <Border BorderBrush="Navy" BorderThickness="5" Background="DarkGoldenrod">
                    <Grid Margin="2">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="4"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Label Grid.Row="0" Grid.Column="0"
                               HorizontalAlignment="Left"
                               FontWeight="Bold"
                               Content="Quests"/>
                        <Button Grid.Row="0" Grid.Column="1"
                                Width="25"
                                FontWeight="Bold"
                                Content="X"
                                Click="OnClickCloseQuests">
                            <Button.Resources>
                                <Style TargetType="Border">
                                    <Setter Property="CornerRadius" Value="3"/>
                                </Style>
                            </Button.Resources>

                        </Button>
                        <DataGrid Grid.Row="2" Grid.Column="0"
                                  Grid.ColumnSpan="2"
                                  ItemsSource="{Binding CurrentPlayer.Quests}"
                                  AutoGenerateColumns="False"
                                  HeadersVisibility="Column"
                                  VerticalScrollBarVisibility="Auto"
                                  MaxHeight="{Binding RelativeSource={RelativeSource FindAncestor,
                                          AncestorType={x:Type Canvas}},Path=MaxHeight}"
                                  Width="{Binding RelativeSource={RelativeSource FindAncestor,
                                          AncestorType={x:Type Canvas}},Path=ActualWidth}">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Name"
                                                Binding="{Binding PlayerQuest.Name, Mode=OneWay}"
                                                Width="*">
                                    <DataGridTextColumn.CellStyle>
                                        <Style TargetType="DataGridCell">
                                            <Setter Property="ToolTip" Value="{Binding PlayerQuest.ToolTipContents}"/>
                                        </Style>
                                    </DataGridTextColumn.CellStyle>
                                </DataGridTextColumn>
                                <DataGridTextColumn Header="Completed"
                                                Binding="{Binding IsCompleted, Mode=OneWay}"
                                                Width="Auto"/>

                            </DataGrid.Columns>

                        </DataGrid>
                    </Grid>
                </Border>
            </Canvas>
            <Canvas Canvas.Top="{Binding RecipesDetails.Top}" Canvas.Left="{Binding RecipesDetails.Left}"
                    Width="Auto"
                    Height="Auto"
                    x:Name="PlayerRecipesDetailsPopup"
                    MinHeight="{Binding RecipesDetails.MinHeight}"
                    MinWidth="{Binding RecipesDetails.MinWidth}"
                    MaxHeight="{Binding RecipesDetails.MaxHeight}"
                    MaxWidth="{Binding RecipesDetails.MaxWidth}"
                    Visibility="{Binding RecipesDetails.IsVisible, Converter={StaticResource BooleanToVisibility}}">
                <Border BorderBrush="Navy" BorderThickness="5" Background="DarkGoldenrod">
                    <Grid Margin="2">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="4"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Label Grid.Row="0" Grid.Column="0"
                               HorizontalAlignment="Left"
                               FontWeight="Bold"
                               Content="Recipes"/>
                        <Button Grid.Row="0" Grid.Column="1"
                                Width="25"
                                FontWeight="Bold"
                                Content="X"
                                Click="OnClickCloseRecipes">
                            <Button.Resources>
                                <Style TargetType="Border">
                                    <Setter Property="CornerRadius" Value="3"/>
                                </Style>
                            </Button.Resources>

                        </Button>
                        <DataGrid Grid.Row="2" Grid.Column="0"
                                  Grid.ColumnSpan="2"
                                  ItemsSource="{Binding CurrentPlayer.Recipes}"
                                  AutoGenerateColumns="False"
                                  HeadersVisibility="Column"
                                  VerticalScrollBarVisibility="Auto"
                                  MaxHeight="{Binding RelativeSource={RelativeSource FindAncestor,
                                          AncestorType={x:Type Canvas}},Path=MaxHeight}"
                                  Width="{Binding RelativeSource={RelativeSource FindAncestor,
                                          AncestorType={x:Type Canvas}},Path=ActualWidth}">
                            <DataGrid.Columns>

                                <DataGridTextColumn Header="Name"
                                                Binding="{Binding Name, Mode=OneWay}"
                                                Width="*">

                                    <DataGridTextColumn.CellStyle>
                                        <Style TargetType="DataGridCell">
                                            <Setter Property="ToolTip" Value="{Binding ToolTipContents}"/>
                                        </Style>
                                    </DataGridTextColumn.CellStyle>
                                </DataGridTextColumn>
                                <DataGridTemplateColumn MinWidth="75">

                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>

                                            <Button Click="OnCLickCraft"
                                                Width="55"
                                                Content="Craft"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                    </Grid>
                </Border>
            </Canvas>
        </Canvas>

        <!--GameInfo-->
        
        
            <Border Grid.Column="1" Grid.Row="1" 
                 BorderBrush="Black" BorderThickness="1,2,1,1" Background="Wheat">
                <RichTextBox x:Name="GameMessages" Background="Wheat" VerticalScrollBarVisibility="Auto"
                             IsReadOnly="True">
                    <RichTextBox.Resources>
                        <Style TargetType="{x:Type Paragraph}">
                            <Setter Property="Margin" Value="0"/>
                        </Style>
                    </RichTextBox.Resources>
                </RichTextBox>
            </Border>
            <Border Grid.Column="2" Grid.Row="1"  BorderBrush="Black" BorderThickness="1,2,2,1" Background="BurlyWood">
                <Grid Grid.Column="1" Grid.Row="0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                <TextBlock Grid.Row="0" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,5,0,0"
                           Text="{Binding CurrentLocation.Name}"/>
                <Image  Grid.Row="1" Source ="{Binding CurrentLocation.ImageName, Converter={StaticResource FileToBitmapConverter}}" />
                <TextBlock Grid.Row="2" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,5"
                           Text="{Binding CurrentLocation.Description}"/>
                </Grid>
            </Border>
        <Border Grid.Column="0" Grid.Row="1" BorderBrush="Black" BorderThickness="2,2,1,1" Background="BurlyWood">

                <Grid Grid.Column="1" Grid.Row="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                <TextBlock Grid.Row="0" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,5,0,0"
                               Text="{Binding CurrentMonster.Name}"/>
                    <Image Grid.Row="1" Source ="{Binding CurrentMonster.ImageName, Converter={StaticResource FileToBitmapConverter}}" />
                    <Image Grid.Row="1" Source ="{Binding CurrentNPC.ImageName, Converter={StaticResource FileToBitmapConverter}}" />
                    <StackPanel Grid.Row="2" Visibility="{Binding HasMonster, Converter={StaticResource BooleanToVisibility}}"
                                HorizontalAlignment="Center"
                                Orientation="Horizontal">
                        <TextBlock VerticalAlignment="Center" Margin="0,5,0,0">Hit Points:</TextBlock>
                        <TextBlock VerticalAlignment="Center" Margin="0,5,0,0" Text="{Binding CurrentMonster.CurrentHitPoints}"/>
                    </StackPanel>
                    <StackPanel Grid.Row="2" Visibility="{Binding HasNPC, Converter={StaticResource BooleanToVisibility}}"
                                HorizontalAlignment="Center"
                                Orientation="Horizontal">

                        <TextBlock VerticalAlignment="Center" Text="{Binding CurrentNPC.Name}"/>
                    </StackPanel>
                </Grid>
            </Border>

        <!--DialogInfo-->
        <Border Grid.Row="2" Grid.Column="0" BorderThickness="2,1,1,2" BorderBrush="Black">
            <Grid Grid.Row="2" Grid.Column="0" Background="PaleGoldenrod">
                <ListBox Visibility="{Binding HasNPC, Converter={StaticResource BooleanToVisibility}}"
                         ItemsSource="{Binding CurrentNPC.Dialogs}"
                         Background="PaleGoldenrod">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="# "/>
                                <TextBlock Text="{Binding ShortDialog}"
                                       HorizontalAlignment="Left"
                                       MouseLeftButtonDown="OnMouseClickDialogWithNPC"/>
                            </StackPanel>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </Grid>
        </Border>
        <!--ShortPlayerInfo-->

        <Border Grid.Row="2" Grid.Column="2" BorderThickness="1,1,2,2" BorderBrush="Black">
            
        
        <Grid Grid.Row="2" Grid.Column="2" Background="PaleGoldenrod">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <Label Grid.Row="0" Grid.Column="0"
                   Content="Health: "/>
            <Label Grid.Row="2" Grid.Column="0" VerticalAlignment="Bottom"
                   Content="Attribute points: "/>
            <Label Grid.Row="0" Grid.Column="1"
                   Content="{Binding CurrentPlayer.HitPoint}"/>
            <Label Grid.Row="2" Grid.Column="1" VerticalAlignment="Bottom"
                   Content="{Binding CurrentPlayer.AttributePoints}"/>
        </Grid>
        </Border>
        <!--Controls-->
        <Border Grid.Row="2" Grid.Column="1" BorderThickness="1,1,1,2" BorderBrush="Black">
        <Grid Grid.Row="2" Grid.Column="1" Background="Lavender">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="3*"/>
                <ColumnDefinition Width="2*"/>
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0" Grid.Row="0"
                  VerticalAlignment="Top" Margin="5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="2*"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <ComboBox Grid.Column="0" Grid.Row="1" 
                          Margin="5"
                          Visibility="{Binding HasMonster, Converter={StaticResource BooleanToVisibility}}"
                          ItemsSource="{Binding CurrentPlayer.Inventory.Weapons}"
                          SelectedItem="{Binding CurrentPlayer.CurrentWeapon}"
                          DisplayMemberPath="Name"/>
                <Button Grid.Row="1" Grid.Column="2"
                        Margin="5"
                        Visibility="{Binding HasMonster, Converter={StaticResource BooleanToVisibility}}"
                        Content="Attack"
                        Click="OnCLickAttackMonster"/>
                <ComboBox Grid.Column="0" Grid.Row="0" 
                          Margin="5"
                          Visibility="{Binding CurrentPlayer.Inventory.HasConsumable, Converter={StaticResource BooleanToVisibility}}"
                          ItemsSource="{Binding CurrentPlayer.Inventory.Consumables}"
                          SelectedItem="{Binding CurrentPlayer.CurrentConsumable}"
                          DisplayMemberPath="Name"/>
                <Button Grid.Row="0" Grid.Column="2"
                        Margin="5"
                        Visibility="{Binding CurrentPlayer.Inventory.HasConsumable, Converter={StaticResource BooleanToVisibility}}"
                        Content="Use"
                        Click="OnCLickUseCurrentConsumable"/>
            </Grid>

            <Grid Grid.Column="1" Margin="13">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Button Grid.Column="1" Grid.Row="0" Click="OnClickGoNorth" 
                        Visibility="{Binding HasLocationToNorth, Converter={StaticResource BooleanToVisibility}}">
                        <Button.Resources>
                            <Style TargetType="Border">
                                <Setter Property="CornerRadius" Value="30"/>
                            </Style>
                        </Button.Resources>
                        <Button.Background>
                            <ImageBrush ImageSource="MenuImages/Menu/ControlsBackground.jpg"
                            Stretch="Fill"/>
                        </Button.Background>
                        <Path Stroke="Black" Fill="Gold" Data="M 0 30 L 60 30 L 30 0 Z"/>
                </Button>
                <Button Grid.Column="0" Grid.Row="1"  Click="OnClickGoWest"
                        Visibility="{Binding HasLocationToWest, Converter={StaticResource BooleanToVisibility}}">
                        <Button.Resources>
                            <Style TargetType="Border">
                                <Setter Property="CornerRadius" Value="30"/>
                            </Style>
                        </Button.Resources>
                        <Button.Background>
                            <ImageBrush ImageSource="MenuImages/Menu/ControlsBackground.jpg"
                            Stretch="Fill"/>
                        </Button.Background>
                        <Path Stroke="Black" Fill="Gold" Data="M -10 30 L 24 60 L 24 0 Z"/>
                </Button>
                <Button Grid.Column="2" Grid.Row="1"  Click="OnClickGoEast"
                        Visibility="{Binding HasLocationToEast, Converter={StaticResource BooleanToVisibility}}">
                        <Button.Resources>
                            <Style TargetType="Border">
                                <Setter Property="CornerRadius" Value="30"/>
                            </Style>
                        </Button.Resources>
                        <Button.Background>
                            <ImageBrush ImageSource="MenuImages/Menu/ControlsBackground.jpg"
                            Stretch="Fill"/>
                        </Button.Background>
                        <Path Stroke="Black" Fill="Gold" Data="M 10 60 L 45 30 L 10 0  Z"/>
                </Button>
                <Button Grid.Column="1" Grid.Row="2" Click="OnClickGoSouth"
                        Visibility="{Binding HasLocationToSouth, Converter={StaticResource BooleanToVisibility}}">
                        <Button.Resources>
                            <Style TargetType="Border">
                                <Setter Property="CornerRadius" Value="30"/>
                            </Style>
                        </Button.Resources>
                        <Button.Background>
                            <ImageBrush ImageSource="MenuImages/Menu/ControlsBackground.jpg"
                            Stretch="Fill"/>
                        </Button.Background>
                        <Path Stroke="Black" Fill="Gold" Data="M 0 0 L 30 30 L 60 0 Z"/>
                </Button>
                <Button Grid.Column="1" Grid.Row="1" Content="Trade" Click="OnClickDisplayTradeScreen"
                        Visibility="{Binding HasTrader, Converter={StaticResource BooleanToVisibility}}"
                        Width="75" Height="50"/>
            </Grid>
        </Grid>
        </Border>

    </Grid>
</Window>
